// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TecSoftware.Infrastructure.Data.Business;

namespace TecSoftware.Infrastructure.Migrations.Business
{
    [DbContext(typeof(BusinessContext))]
    [Migration("20200730193207_initBusinessScript")]
    partial class initBusinessScript
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Almacen", b =>
                {
                    b.Property<int>("AlmacenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstablecimientoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("AlmacenId");

                    b.HasIndex("EstablecimientoId");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.AreaNegocio", b =>
                {
                    b.Property<int>("AreaNegocioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AreaNegocioId");

                    b.ToTable("AreaNegocios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Colour", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ColorId");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoCompra")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CompraId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Comprobante", b =>
                {
                    b.Property<int>("ComprobanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ComprobanteId");

                    b.ToTable("Comprobantes");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ComprobantePago", b =>
                {
                    b.Property<int>("ComprobantePagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoNumerico")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<int>("DigitoVerificador")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCe")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroComprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PuntoEmisionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ComprobantePagoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ComprobanteId");

                    b.HasIndex("EstadoCe");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("PuntoEmisionId");

                    b.HasIndex("TipoIdentificacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ComprobantePagos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ComprobanteTipoIdentificacion", b =>
                {
                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.HasKey("ComprobanteId", "TipoIdentificacionId");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("ComprobanteTipoIdentificacion");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ConceptoInventario", b =>
                {
                    b.Property<int>("ConceptoInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TipoOperacion")
                        .HasColumnType("int");

                    b.HasKey("ConceptoInventarioId");

                    b.ToTable("ConceptoInventarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.CotizacionProveedor", b =>
                {
                    b.Property<int>("CotizacionProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroCotizacion")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CotizacionProveedorId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("CotizacionProveedores");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Denominacion", b =>
                {
                    b.Property<int>("DenominacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DenominacionId");

                    b.ToTable("Denominaciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.DetalleComprobantePago", b =>
                {
                    b.Property<int>("DetalleComprobantePagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComprobantePagoId")
                        .HasColumnType("int");

                    b.Property<int>("DetalleOrdenVentaId")
                        .HasColumnType("int");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPrecioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Propina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalCero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalExentoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalNoObjetoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIrbpnr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetalleComprobantePagoId");

                    b.HasIndex("ComprobantePagoId");

                    b.HasIndex("DetalleOrdenVentaId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoPrecioId");

                    b.ToTable("DetalleComprobantePagos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.DetalleOrdenVenta", b =>
                {
                    b.Property<int>("DetalleOrdenVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrdenVentaId")
                        .HasColumnType("int");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoPrecioId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalCero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalExentoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalNoObjetoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIrbpnr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetalleOrdenVentaId");

                    b.HasIndex("OrdenVentaId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoPrecioId");

                    b.ToTable("DetalleOrdenVentas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ambiente")
                        .HasColumnType("int");

                    b.Property<string>("ClaveEmail")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Emision")
                        .HasColumnType("int");

                    b.Property<byte[]>("LogoEmisor")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ObligadoContabilidad")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Representante")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ruc")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("TelefonoCelular")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TelefonoFijo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Establecimiento", b =>
                {
                    b.Property<int>("EstablecimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("TelefonoCelular")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TelefonoFijo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("EstablecimientoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Establecimientos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.EstadoComprobanteElectronico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Siglas")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EstadoComprobanteElectronicos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.FormaPago", b =>
                {
                    b.Property<int>("FormaPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("FormaPagoId");

                    b.ToTable("FormaPagos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Funcion", b =>
                {
                    b.Property<int>("FuncionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("FuncionId");

                    b.ToTable("Funciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.HistoricoProductoPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadMaxima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadMinima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaUpdate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoPrecioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pvp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPrecioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Utilidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoPrecioId");

                    b.ToTable("HistoricoProductoPrecios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Impuesto", b =>
                {
                    b.Property<int>("ImpuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ImpuestoId");

                    b.ToTable("Impuestos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ImpuestoVenta", b =>
                {
                    b.Property<int>("ImpuestoVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetalleComprobantePagoId")
                        .HasColumnType("int");

                    b.Property<int>("TasaImpuestoId")
                        .HasColumnType("int");

                    b.HasKey("ImpuestoVentaId");

                    b.HasIndex("DetalleComprobantePagoId");

                    b.HasIndex("TasaImpuestoId");

                    b.ToTable("ImpuestoVentas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Laboratorio", b =>
                {
                    b.Property<int>("LaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Representante")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("LaboratorioId");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ListaPrecio", b =>
                {
                    b.Property<int>("ListaPrecioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ListaPrecioId");

                    b.ToTable("ListaPrecios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Medida", b =>
                {
                    b.Property<int>("MedidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("MedidaId");

                    b.ToTable("Medidas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Moneda", b =>
                {
                    b.Property<int>("MonedaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MonedaId");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.MovimientoCaja", b =>
                {
                    b.Property<int>("MovimientoCajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComprobantePagoId")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("Egreso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Ingreso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OperacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("MovimientoCajaId");

                    b.HasIndex("ComprobantePagoId");

                    b.HasIndex("OperacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MovimientoCajas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.MovimientoInventario", b =>
                {
                    b.Property<int>("MovimientoInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadEntrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadSaldoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadSaldoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadSalida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotalEntrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotalSaldoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotalSaldoInical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoTotalSalida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoUnitarioEntrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoUnitarioSaldoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoUnitarioSaldoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoUnitarioSalida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaOperacionInventario")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoAlmacenId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoOperacionMovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoRegistroInventarioId")
                        .HasColumnType("int");

                    b.HasKey("MovimientoInventarioId");

                    b.HasIndex("ProductoAlmacenId");

                    b.HasIndex("ProductoOperacionMovimientoId");

                    b.HasIndex("ProductoRegistroInventarioId");

                    b.ToTable("MovimientoInventarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.NumeradorComprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComprobanteId")
                        .HasColumnType("int");

                    b.Property<string>("Impresora")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PuntoEmisionId")
                        .HasColumnType("int");

                    b.Property<string>("Secuencial")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.HasIndex("ComprobanteId");

                    b.HasIndex("PuntoEmisionId");

                    b.ToTable("NumeradorComprobantes");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.NumeradorOrdenVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Impresora")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PuntoEmisionId")
                        .HasColumnType("int");

                    b.Property<string>("Secuencial")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.HasIndex("PuntoEmisionId");

                    b.ToTable("NumeradorOrdenVentas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Operacion", b =>
                {
                    b.Property<int>("OperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperacionStatus")
                        .HasColumnType("int");

                    b.Property<int>("PuntoEmisionId")
                        .HasColumnType("int");

                    b.HasKey("OperacionId");

                    b.HasIndex("PuntoEmisionId");

                    b.ToTable("Operaciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OperacionMovimiento", b =>
                {
                    b.Property<int>("OperacionMovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlmacenId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoOperacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("TipoOperacion")
                        .HasColumnType("int");

                    b.HasKey("OperacionMovimientoId");

                    b.HasIndex("AlmacenId");

                    b.ToTable("OperacionMovimientos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OrdenCompra", b =>
                {
                    b.Property<int>("OrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionEntrega")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("EstadoOrdenCompra")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaPago")
                        .HasColumnType("int");

                    b.Property<string>("NumeroOrden")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OrdenCompraId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OrdenCompras");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OrdenInventario", b =>
                {
                    b.Property<int>("OrdenInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoOrden")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroOrden")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OrdenInventarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OrdenInventarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OrdenVenta", b =>
                {
                    b.Property<int>("OrdenVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoNumerico")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroComprobante")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PuntoEmisionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OrdenVentaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PuntoEmisionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OrdenVentas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Presentacion", b =>
                {
                    b.Property<int>("PresentacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Equivalencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("MedidaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("PresentacionId");

                    b.HasIndex("MedidaId");

                    b.ToTable("Presentaciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CalculoImportePorRangos")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncluyeImpuesto")
                        .HasColumnType("int");

                    b.Property<int?>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int>("MedidaId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("TallaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoProducto")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("SubCategoriaId");

                    b.HasIndex("TallaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoAlmacen", b =>
                {
                    b.Property<int>("ProductoAlmacenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlmacenId")
                        .HasColumnType("int");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SaldoMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoAlmacenId");

                    b.HasIndex("AlmacenId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoAlmacenes");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoColor", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("ProductoColor");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoCompra", b =>
                {
                    b.Property<int>("ProductoCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoOrdenCompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("Propina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalCero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalExentoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalNoObjetoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIrbpnr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoCompraId");

                    b.HasIndex("CompraId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoOrdenCompraId");

                    b.ToTable("ProductoCompras");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoCotizacion", b =>
                {
                    b.Property<int>("ProductoCotizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FormaPago")
                        .HasColumnType("int");

                    b.Property<int>("MedidaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoRequerimientoId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudCotizacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTasaImpuesto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoCotizacionId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoRequerimientoId");

                    b.HasIndex("SolicitudCotizacionId");

                    b.ToTable("ProductoCotizaciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoCotizacionProveedor", b =>
                {
                    b.Property<int>("ProductoCotizacionProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CotizacionProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("FormaPago")
                        .HasColumnType("int");

                    b.Property<int>("MedidaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoCotizacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaImpuesto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoCotizacionProveedorId");

                    b.HasIndex("CotizacionProveedorId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("ProductoCotizacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoCotizacionProveedores");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoOperacionMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OperacionMovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoOrdenInventarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperacionMovimientoId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("ProductoOrdenInventarioId");

                    b.ToTable("ProductoOperacionMovimientos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoOrdenCompra", b =>
                {
                    b.Property<int>("ProductoOrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Impuesto")
                        .HasColumnType("int");

                    b.Property<int>("MedidaId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoCotizacionProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalCero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalExcentoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTotalNoObjetoIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoOrdenCompraId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("OrdenCompraId");

                    b.HasIndex("ProductoCotizacionProveedorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoOrdenCompras");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoOrdenInventario", b =>
                {
                    b.Property<int>("ProductoOrdenInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlmacenId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ConceptoInventarioId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenInventarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoOperacion")
                        .HasColumnType("int");

                    b.HasKey("ProductoOrdenInventarioId");

                    b.HasIndex("AlmacenId");

                    b.HasIndex("ConceptoInventarioId");

                    b.HasIndex("OrdenInventarioId");

                    b.HasIndex("PresentacionId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoOrdenInventarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoPrecio", b =>
                {
                    b.Property<int>("ProductoPrecioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CantidadMaxima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantidadMinima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImporteMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ListaPrecioId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pvp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPrecioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Utilidad")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoPrecioId");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoPrecios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoProveedor", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId", "ProveedorId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("ProductoProveedor");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoRegistroInventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoOrdenInventarioId")
                        .HasColumnType("int");

                    b.Property<int>("RegistroInventarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoOrdenInventarioId");

                    b.HasIndex("RegistroInventarioId");

                    b.ToTable("ProductoRegistroInventarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoRequerimiento", b =>
                {
                    b.Property<int>("ProductoRequerimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaNegocioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MedidaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("RequerimientoCompraId")
                        .HasColumnType("int");

                    b.HasKey("ProductoRequerimientoId");

                    b.HasIndex("AreaNegocioId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("RequerimientoCompraId");

                    b.ToTable("ProductoRequerimientos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoTalla", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TallaId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId", "TallaId");

                    b.HasIndex("TallaId");

                    b.ToTable("ProductoTalla");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoTasaImpuesto", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TasaImpuestoId")
                        .HasColumnType("int");

                    b.HasKey("ProductoId", "TasaImpuestoId");

                    b.HasIndex("TasaImpuestoId");

                    b.ToTable("ProductoTasaImpuesto");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmailProveedor")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("EmailVendedor")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Representante")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int");

                    b.Property<int>("UbigeoId")
                        .HasColumnType("int");

                    b.HasKey("ProveedorId");

                    b.HasIndex("TipoIdentificacionId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.PuntoEmision", b =>
                {
                    b.Property<int>("PuntoEmisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int>("EstablecimientoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("PuntoEmisionId");

                    b.HasIndex("EstablecimientoId");

                    b.ToTable("PuntoEmisiones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Recuento", b =>
                {
                    b.Property<int>("RecuentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DenominacionId")
                        .HasColumnType("int");

                    b.Property<int>("OperacionId")
                        .HasColumnType("int");

                    b.HasKey("RecuentoId");

                    b.HasIndex("DenominacionId");

                    b.HasIndex("OperacionId");

                    b.ToTable("Recuentos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.RegistroInventario", b =>
                {
                    b.Property<int>("RegistroInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlmacenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaOperacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperacionMovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoRegistroInventario")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RegistroInventarioId");

                    b.HasIndex("AlmacenId");

                    b.HasIndex("OperacionMovimientoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistroInventarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.RequerimientoCompra", b =>
                {
                    b.Property<int>("RequerimientoCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroRequerimiento")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("RequerimientoCompraId");

                    b.ToTable("RequerimientoCompras");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.RolFuncion", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionId")
                        .HasColumnType("int");

                    b.HasKey("RolId", "FuncionId");

                    b.HasIndex("FuncionId");

                    b.ToTable("RolFuncion");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.SolicitudCotizacion", b =>
                {
                    b.Property<int>("SolicitudCotizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroCotizacion")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SolicitudCotizacionId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("SolicitudCotizaciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.SubCategoria", b =>
                {
                    b.Property<int>("SubCategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("SubCategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubCategorias");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Talla", b =>
                {
                    b.Property<int>("TallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("TallaId");

                    b.ToTable("Tallas");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.TasaImpuesto", b =>
                {
                    b.Property<int>("TasaImpuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Concepto")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("ImpuestoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Tasa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TasaImpuestoId");

                    b.HasIndex("ImpuestoId");

                    b.ToTable("TasaImpuestos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.TipoIdentificacion", b =>
                {
                    b.Property<int>("TipoIdentificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("TipoIdentificacionId");

                    b.ToTable("TipoIdentificaciones");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Ubigeo", b =>
                {
                    b.Property<int>("UbigeoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Canton")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CodigoCanton")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("CodigoParroquia")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("CodigoProvincia")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Parroquia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UbigeoId");

                    b.ToTable("Ubigeos");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Almacen", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Establecimiento", "Establecimiento")
                        .WithMany("Almacenes")
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Cliente", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Compra", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ComprobantePago", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Cliente", "Cliente")
                        .WithMany("ComprobantePagos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Comprobante", "Comprobante")
                        .WithMany("ComprobantePagos")
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.EstadoComprobanteElectronico", "EstadoComprobanteElectronico")
                        .WithMany()
                        .HasForeignKey("EstadoCe");

                    b.HasOne("TecSoftware.EntidadesDominio.FormaPago", "FormaPago")
                        .WithMany("ComprobantePagos")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.PuntoEmision", "PuntoEmision")
                        .WithMany("ComprobantePagos")
                        .HasForeignKey("PuntoEmisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany("ComprobantePagos")
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ComprobanteTipoIdentificacion", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Comprobante", "Comprobante")
                        .WithMany("ComprobanteTipoIdentificaciones")
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany("ComprobanteTipoIdentificaciones")
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.CotizacionProveedor", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.DetalleComprobantePago", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.ComprobantePago", "ComprobantePago")
                        .WithMany("DetalleComprobantePagos")
                        .HasForeignKey("ComprobantePagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.DetalleOrdenVenta", "DetalleOrdenVenta")
                        .WithMany()
                        .HasForeignKey("DetalleOrdenVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoPrecio", "ProductoPrecio")
                        .WithMany()
                        .HasForeignKey("ProductoPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.DetalleOrdenVenta", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.OrdenVenta", "OrdenVenta")
                        .WithMany("DetalleOrdenVentas")
                        .HasForeignKey("OrdenVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoPrecio", "ProductoPrecio")
                        .WithMany()
                        .HasForeignKey("ProductoPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Establecimiento", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Empresa", "Empresa")
                        .WithMany("Establecimientos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.HistoricoProductoPrecio", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.ProductoPrecio", "ProductoPrecio")
                        .WithMany()
                        .HasForeignKey("ProductoPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ImpuestoVenta", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.DetalleComprobantePago", "DetaaComprobantePago")
                        .WithMany("ImpuestoVentas")
                        .HasForeignKey("DetalleComprobantePagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.TasaImpuesto", "TasaImpuesto")
                        .WithMany("ImpuestoVentas")
                        .HasForeignKey("TasaImpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.MovimientoCaja", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.ComprobantePago", "ComprobantePago")
                        .WithMany()
                        .HasForeignKey("ComprobantePagoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TecSoftware.EntidadesDominio.Operacion", "Operacion")
                        .WithMany("MovimientoCajas")
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.MovimientoInventario", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.ProductoAlmacen", "ProductoAlmacen")
                        .WithMany()
                        .HasForeignKey("ProductoAlmacenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoOperacionMovimiento", "ProductoOperacionMovimiento")
                        .WithMany()
                        .HasForeignKey("ProductoOperacionMovimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoRegistroInventario", "ProductoRegistroInventario")
                        .WithMany()
                        .HasForeignKey("ProductoRegistroInventarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.NumeradorComprobante", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Comprobante", "Comprobante")
                        .WithMany()
                        .HasForeignKey("ComprobanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.PuntoEmision", "PuntoEmision")
                        .WithMany()
                        .HasForeignKey("PuntoEmisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.NumeradorOrdenVenta", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.PuntoEmision", "PuntoEmision")
                        .WithMany()
                        .HasForeignKey("PuntoEmisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Operacion", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.PuntoEmision", "PuntoEmision")
                        .WithMany()
                        .HasForeignKey("PuntoEmisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OperacionMovimiento", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Almacen", "Almacen")
                        .WithMany("OperacionMovimientos")
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OrdenCompra", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OrdenInventario", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.OrdenVenta", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.PuntoEmision", "PuntoEmision")
                        .WithMany()
                        .HasForeignKey("PuntoEmisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Presentacion", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Medida", "Medida")
                        .WithMany("Presentaciones")
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Producto", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TecSoftware.EntidadesDominio.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TecSoftware.EntidadesDominio.Medida", "Medida")
                        .WithMany()
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.SubCategoria", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Talla", null)
                        .WithMany("Productos")
                        .HasForeignKey("TallaId");
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoAlmacen", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Almacen", "Almacen")
                        .WithMany("ProductoAlmacenes")
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoColor", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Colour", "Colour")
                        .WithMany("ProductoColores")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany("ProductoColores")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoCompra", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Compra", "Compra")
                        .WithMany("ProductoCompras")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoOrdenCompra", "ProductoOrdenCompra")
                        .WithMany()
                        .HasForeignKey("ProductoOrdenCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoCotizacion", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Medida", "Medida")
                        .WithMany()
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoRequerimiento", "ProductoRequerimiento")
                        .WithMany()
                        .HasForeignKey("ProductoRequerimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.SolicitudCotizacion", "SolicitudCotizacion")
                        .WithMany("ProductoCotizaciones")
                        .HasForeignKey("SolicitudCotizacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoCotizacionProveedor", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.CotizacionProveedor", "CotizacionProveedor")
                        .WithMany("ProductoCotizacionProveedores")
                        .HasForeignKey("CotizacionProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Medida", "Medida")
                        .WithMany()
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoCotizacion", "ProductoCotizacion")
                        .WithMany()
                        .HasForeignKey("ProductoCotizacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoOperacionMovimiento", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.OperacionMovimiento", "OperacionMovimiento")
                        .WithMany("ProductoOperacionMovimientos")
                        .HasForeignKey("OperacionMovimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoOrdenInventario", "ProductoOrdenInventario")
                        .WithMany()
                        .HasForeignKey("ProductoOrdenInventarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoOrdenCompra", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Medida", "Medida")
                        .WithMany()
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.OrdenCompra", "OrdenCompra")
                        .WithMany("ProductoOrdenCompras")
                        .HasForeignKey("OrdenCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ProductoCotizacionProveedor", "ProductoCotizacionProveedor")
                        .WithMany()
                        .HasForeignKey("ProductoCotizacionProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoOrdenInventario", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.ConceptoInventario", "ConceptoInventario")
                        .WithMany()
                        .HasForeignKey("ConceptoInventarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.OrdenInventario", "OrdenInventario")
                        .WithMany("ProductoOrdenInventarios")
                        .HasForeignKey("OrdenInventarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Presentacion", "Presentacion")
                        .WithMany()
                        .HasForeignKey("PresentacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoPrecio", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.ListaPrecio", "ListaPrecio")
                        .WithMany("ProductoPrecios")
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany("ProductoPrecios")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoProveedor", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany("ProductoProveedores")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Proveedor", "Proveedor")
                        .WithMany("ProductoProveedores")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoRegistroInventario", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.ProductoOrdenInventario", "ProductoOrdenInventario")
                        .WithMany()
                        .HasForeignKey("ProductoOrdenInventarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.RegistroInventario", "RegistroInventario")
                        .WithMany("ProductoRegistroInventarios")
                        .HasForeignKey("RegistroInventarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoRequerimiento", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.AreaNegocio", "AreaNegocio")
                        .WithMany()
                        .HasForeignKey("AreaNegocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Medida", "Medida")
                        .WithMany()
                        .HasForeignKey("MedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.RequerimientoCompra", "RequerimientoCompra")
                        .WithMany("ProductoRequerimientos")
                        .HasForeignKey("RequerimientoCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoTalla", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Talla", "Talla")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("TallaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.ProductoTasaImpuesto", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Producto", "Producto")
                        .WithMany("ProductoTasaImpuestos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.TasaImpuesto", "TasaImpuesto")
                        .WithMany("ProductoTasaImpuestos")
                        .HasForeignKey("TasaImpuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Proveedor", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.PuntoEmision", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Establecimiento", "Establecimiento")
                        .WithMany("PuntoEmisiones")
                        .HasForeignKey("EstablecimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Recuento", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Denominacion", "Denominacion")
                        .WithMany()
                        .HasForeignKey("DenominacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Operacion", "Operacion")
                        .WithMany("Recuentos")
                        .HasForeignKey("OperacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.RegistroInventario", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Almacen", "Almacen")
                        .WithMany()
                        .HasForeignKey("AlmacenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.OperacionMovimiento", "OperacionMovimiento")
                        .WithMany("RegistroInventarios")
                        .HasForeignKey("OperacionMovimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.RolFuncion", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Funcion", "Funcion")
                        .WithMany("RolFunciones")
                        .HasForeignKey("FuncionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecSoftware.EntidadesDominio.Rol", "Rol")
                        .WithMany("RolFunciones")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.SolicitudCotizacion", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.SubCategoria", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.TasaImpuesto", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Impuesto", "Impuesto")
                        .WithMany("TasaImpuestos")
                        .HasForeignKey("ImpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TecSoftware.EntidadesDominio.Usuario", b =>
                {
                    b.HasOne("TecSoftware.EntidadesDominio.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
